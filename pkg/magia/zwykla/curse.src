// crash

use basicio;
use cfgfile;
use math;
use basic;
use uo;

include "include/spellRestrictions";


program cast_curse( parms )
  var circle := 4;
  var delivery := "direct";
  var noto := "harmful";
  var result := maincast(parms, delivery, circle, noto, 27);
  if(result == 0)
    return;
  endif
  var caster := result[1];
  var cast_on := result[2];
  PlaySoundEffect(cast_on, SFX_SPELL_CURSE);
  PlayObjectCenteredEffect( cast_on, FX_CURSE_EFFECT, 10,10);
  var magery := GetEffectiveSkill(caster, SKILLID_MAGERY);
  var ilosc := CInt(magery / 7);
  if(ilosc > 18)
	ilosc := 18;
  endif
  var mod_amount := Resisted(circle,caster,cast_on,ilosc);
  var eval := GetEffectiveSkill(caster, SKILLID_EVALINT);
  var medit := GetEffectiveSkill(caster, SKILLID_MEDITATION);
  var duration := CInt((eval + magery + medit) * 1.5);
  SetObjProperty(cast_on, "LastHit", {caster.name,caster.serial, "curse" });
  if(Reflected(cast_on))
	cast_on := caster;
  endif
  // absorbcja
  var cfg := ReadConfigFile("::npcdesc");
  var odbij := cfg[cast_on.npctemplate].Resuje;
  if(odbij == "umysl")
		duration := duration / 2;
		PrintTextAbove(cast_on, "*absorbuje energie*");
	endif
// koniec absorbcji
	if(IsNoob(caster) || IsNoob(cast_on))
		return 0;
	endif
  if(!CheckAttack(caster, cast_on))
		return 0;
	endif
  if (CanMod(cast_on, "str"))
	DoTempMod(cast_on, "str", 0- mod_amount, duration);
  endif
  if (CanMod(cast_on, "dex"))
	DoTempMod(cast_on, "dex", 0- mod_amount, duration);
  endif
  if (CanMod(cast_on, "int"))
	DoTempMod(cast_on, "int", 0- mod_amount, duration);
  endif
// DoTempMod(cast_on, "p", 0, 0);
endprogram
