use vitals;
use basic;
use uo;
use cfgfile;
use os;

include "include/attributes";
include "include/spellRestrictions";
include ":poisonwatcher:poisons";


program field_control(item)
  sleep(1);
  var npccfg := ReadConfigFile("::npcdesc");
  var boss := SystemFindObjectBySerial(GetObjProperty(item, "creater"), SYSFIND_SEARCH_OFFLINE_MOBILES);
  SetScriptController(boss);
  var dmg := CInt(GetEffectiveSkill(boss, SKILLID_MAGERY) / 25);
  if(!dmg)
    dmg := 1;
  endif
  while(item)
    foreach character in ListMobilesNearLocationEX(item.x, item.y, item.z, 0, LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN)
    
    if(IsNoob(boss) || IsNoob(character))
      return 0;
    endif

    
    if((!character.dead) and (!character.cmdlevel))
        PlaySoundEffect(character, 0x206);
        if(character.isA(POLCLASS_NPC))
          if((npccfg[character.npctemplate].elemental) == "poison")
            HealDamage(character, (dmg * 10));
          else
          if(!CheckAttack(boss, character))
            return 0;
          endif
            send_attack(character, boss, 46);
            ApplyRawDamage(character, 1);
            HealDamage(character, 1);
            var passparms := {character, boss, "poisoned weapon", dmg, 1};
            start_script(":spells:poisonDamage", passparms);
          endif
        else
          if(!character.cmdlevel)
          ApplyRawDamage(character, 1);
          HealDamage(character, 1);
          var passparms := {character, boss, "poison field", dmg, 1};
          start_script(":spells:poisonDamage", passparms);
          endif
        endif
    endif
    endforeach
    sleepms(1500);
  endwhile
endprogram
