use math;
use storage;
use basic;
use basicio;
use uo;
include "include/objtype";
include "include/yesNo";
include "include/myUtil";
include "util/key";
include "include/canAccess";

const KEYSTART := 0x100e;
const KEYEND := 0x1013;
const KEYRING := 0x1011;

var keyarray := array(4110, 4111, 4112, 4114, 4115);

program use_key(who, key)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(!can_access(who, key))
    return;
  endif
  var thetarget := Target(who);
  if(!thetarget)
    SendSysMessage(who, "Anulowano.");
  elseif(!Accessible(who, thetarget))
    if(thetarget.objtype != 0xf010)
      PrintTextAbovePrivate(who, "Nie mozesz tego dosiegnac.", who);
    endif
  elseif(GetObjProperty(thetarget, "Owner"))
    if(GetObjProperty(thetarget, "Owner") != who.serial)
      SendSysMessage(who, "Nie mozesz tego uzyc.");
    endif
  elseif(GetObjProperty(thetarget, "Vendored"))
    SendSysMessage(who, "Nie mozesz tego uzyc.");
  elseif(thetarget == key)
    RenameKey(who, key);
  elseif(GetObjProperty(thetarget, "Public"))
    SendSysMessage(who, "Nie mozesz zamknac domu dopoki jest publiczny.");
  elseif((thetarget.graphic in keyarray) and (!GetObjProperty(thetarget, "lockid")))
    if(can_access(who, thetarget))
      CopyKey(who, thetarget, key);
    endif
  else
    var lockid := GetObjProperty(key, "lockid");
    var targetlockid := GetObjProperty(thetarget, "lockid");
    if(!targetlockid)
      PrintTextAbovePrivate(thetarget, "To nie ma zamka.", who);
    elseif((!lockid) and (thetarget.graphic in keyarray))
      CopyKey(who, key, thetarget);
    elseif(lockid != targetlockid)
      PrintTextAbovePrivate(thetarget, "Zly klucz!", who);
    else
      if((thetarget.objtype >= KEYSTART) && (thetarget.objtype <= KEYEND))
        PrintTextAbovePrivate(who, "Te klucze pasuja.", who);
      else
        UnLockIt(thetarget,who);
      endif
    endif
  endif
endprogram

function UnLockIt(door,who)
  if(door.graphic in { GID_PLANK_EXTENDED_FACING_EAST, GID_PLANK_EXTENDED_FACING_WEST, GID_PLANK_EXTENDED_FACING_NORTH, GID_PLANK_EXTENDED_FACING_SOUTH })
    PrintTextAbovePrivate(door, "Nie mozesz zamknac trapu gdy jest opuszczony.", who);
    return;
  elseif(door.locked == 0)
    if(GetObjProperty(door, "Public"))
      SendSysMessage(who, "Nie mozesz zamknac tego dopoki dom jest publiczny.");
      return;
    else
      door.locked := 1;
      PrintTextAbovePrivate(door, "Zamknieto.", who);
      return;
    endif
  else
    door.locked := 0;
    PrintTextAbovePrivate(door, "Otwarto.", who);
    return;
  endif
endfunction

function RenameKey(who, key)
  var keydescription := RequestInput(who, key, "Podaj nowa nazwe klucza:");
     var descriptionlen := len(keydescription);
  if(keydescription)
    if(descriptionlen <= 20)
      key.name := "klucz: "+ keydescription;
      SendSysMessage(who, "Zmieniono nazwe klucza.");
    else
      SendSysMessage(who, "Wybrana nazwa jest za dluga.");
    endif
  endif
endfunction

function CopyKey(who, key, thetarget)
  if(GetObjProperty(key, "lockid"))
    PrintTextAbovePrivate(key, "Ten klucz jest czysty.", who);
  else
    var targetlockid := GetObjProperty(thetarget, "lockid");
    if(thetarget.graphic in keyarray)
      SetObjProperty(key, "lockid", targetlockid);
      var shipserial := GetObjProperty(thetarget, "shipserial");
      if(shipserial)
        SetObjProperty(key, "shipserial", shipserial);
      endif
      PrintTextAbovePrivate(key, "Skopiowales klucz.", who);
      key.newbie := 1;
    endif
  endif
endfunction

function OpenTamedStorageAreas()
  var bank := FindStorageArea("Tamed Storage");
  if(!bank)
    bank := CreateStorageArea("Tamed Storage");
  endif
  return bank;
endfunction

